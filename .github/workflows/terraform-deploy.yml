name: Deploy EC2 Instance

on:
  push:
    branches:
      - release

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: true

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.REGION }}

    - name: Set directory path
      run: |
          directory_path= ${{ secrets.INFRA_PATH }}
          
      env:
          DIRECTORY_PATH: $directory_path

    - name: Navigate to the infra directory
      run: cd $DIRECTORY_PATH

    - name: Check for Terraform state in S3
      run: |
        if aws s3 ls s3://${{ secrets.STATE_BUCKET }}/${{ secrets.STATE_KEY }}; then
          aws s3 cp s3://${{ secrets.STATE_BUCKET }}/${{ secrets.STATE_KEY }} ./infra/.terraform/
          # Run `terraform init` to ensure dependencies are up to date
          terraform init
        else
          echo "State file not found in S3. Initializing from scratch."
          terraform init
        fi
      working-directory: ./infra

    - name: Plan Terraform
      run: terraform plan 
      working-directory: ./infra

    - name: Deploy EC2 instance
      run: terraform apply -auto-approve 
      working-directory: ./infra

    - name: Store Terraform state in S3
      run: aws s3 cp ./infra/.terraform/terraform.tfstate s3://${{ secrets.STATE_BUCKET }}/
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
      working-directory: ./infra
